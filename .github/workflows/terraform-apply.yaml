name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - 'terraform-vpc/**'
      - 'terraform-addons/**'

  workflow_dispatch:  # 수동 실행 기능 추가

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      vpc_changed: ${{ steps.check_changes.outputs.vpc_changed }}
      addons_changed: ${{ steps.check_changes.outputs.addons_changed }}
    steps:
      - uses: actions/checkout@v3
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^terraform-vpc/"; then
            echo "vpc_changed=true" >> $GITHUB_OUTPUT
          else
            echo "vpc_changed=false" >> $GITHUB_OUTPUT
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^terraform-addons/"; then
            echo "addons_changed=true" >> $GITHUB_OUTPUT
          else
            echo "addons_changed=false" >> $GITHUB_OUTPUT
          fi

  terraform-vpc:
    needs: determine-changes
    if: needs.determine-changes.outputs.vpc_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      # VPC 관련 단계들...
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Notify VPC Update via Slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Terraform VPC folder is being updated automatically."}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Terraform Init for VPC
        run: terraform init -reconfigure
        working-directory: ./terraform-vpc

      - name: Terraform Plan for VPC
        run: terraform plan -out=tfplan
        working-directory: ./terraform-vpc

      - name: Terraform Apply for VPC
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform-vpc

  terraform-addons:
    needs: [determine-changes, terraform-vpc]
    if: always() && (needs.determine-changes.outputs.vpc_changed == 'true' || needs.determine-changes.outputs.addons_changed == 'true')
    runs-on: ubuntu-latest
    
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.10.5

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Notify Addons Update via Slack
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Terraform Addons folder is being updated automatically."}' ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: Terraform Init for Addons
      run: terraform init -reconfigure
      working-directory: ./terraform-addons

    - name: Terraform Plan for Addons
      run: terraform plan -out=tfplan
      working-directory: ./terraform-addons

    - name: Terraform Apply for Addons
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform-addons

    - name: Notify Addons Update Completion via Slack
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Terraform Addons folder update has been completed successfully."}' ${{ secrets.SLACK_WEBHOOK_URL }}
