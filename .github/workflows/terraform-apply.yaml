name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - 'terraform-vpc/**'
      - 'terraform-addons/**'

  workflow_dispatch:  # 수동 실행 기능 추가

jobs:
  terraform-vpc:
    runs-on: ubuntu-latest
    
    steps:
    
    # 1. 저장소 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Terraform 설치
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.10.5

    # 3. AWS 인증 설정 (GitHub Secrets 사용)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 4. Slack 알림 전송 (vpc 작업 시작)
    - name: Notify VPC Update via Slack
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Terraform VPC folder is being updated automatically."}' ${{ secrets.SLACK_WEBHOOK_URL }}

    # 5. GitHub Secrets에서 JSON 읽고 terraform.tfvars로 저장
    - name: Create terraform.tfvars file
      run: |
        echo '${{ secrets.TFVARS_JSON }}' > terraform-vpc/terraform.tfvars

    # 6. Terraform 초기화 (백엔드 설정)
    - name: Terraform Init for VPC
      run: terraform init -reconfigure
      working-directory: ./terraform-vpc

    # 7. Terraform Plan (변경사항 미리 확인)
    - name: Terraform Plan for VPC
      run: terraform plan -out=tfplan
      working-directory: ./terraform-vpc

    # 8. Terraform Apply (자동 승인)
    - name: Terraform Apply for VPC
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform-vpc

  terraform-addons:
    needs: terraform-vpc  # vpc 작업이 완료된 후 실행되도록 설정
    runs-on: ubuntu-latest
    
    steps:
    
    # 1. 저장소 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Terraform 설치
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.10.5

    # 3. AWS 인증 설정 (GitHub Secrets 사용)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 4. Slack 알림 전송 (addons 작업 시작)
    - name: Notify Addons Update via Slack
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Terraform Addons folder is being updated automatically."}' ${{ secrets.SLACK_WEBHOOK_URL }}

    # 5. GitHub Secrets에서 JSON 읽고 terraform.tfvars로 저장
    - name: Create terraform.tfvars file
      run: |
        echo '${{ secrets.TFVARS_JSON }}' > terraform-vpc/terraform.tfvars
        
    # 6. Terraform 초기화 (백엔드 설정)
    - name: Terraform Init for Addons
      run: terraform init -reconfigure
      working-directory: ./terraform-addons

    # 7. Terraform Plan (변경사항 미리 확인)
    - name: Terraform Plan for Addons
      run: terraform plan -out=tfplan
      working-directory: ./terraform-addons

    # 8. Terraform Apply (자동 승인)
    - name: Terraform Apply for Addons
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform-addons
