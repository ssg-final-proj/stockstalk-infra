name: Terraform Apply

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때만 실행
    paths:
      - 'terraform-vpc/**'  # terraform-vpc 폴더 내 파일 변경 시 트리거
      - 'terraform-infra/**'  # terraform-infra 폴더 내 파일 변경 시 트리거
      - 'terraform-addons/**'  # terraform-addons 폴더 내 파일 변경 시 트리거

jobs:
  terraform:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        folder: [terraform-vpc, terraform-infra, terraform-addons]  # 각 Terraform 디렉토리를 매트릭스로 처리
#        backend_key: [
#          "terraform/vpc/terraform.tfstate",
#          "terraform/infra/terraform.tfstate",
#          "terraform/addons/terraform.tfstate"
#        ]  # 각 디렉토리에 대한 backend key 설정

    steps:
    # 1. 저장소 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Terraform 설치
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.10.5

    # 3. AWS 인증 설정 (GitHub Secrets 사용)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    #  현재 디렉토리 확인 (디버깅용)
    - name: Print Current Directory
      run: pwd

#    # 4. Terraform 초기화
#    - name: Terraform Init
#      run: terraform init \
#          -backend-config="bucket=tf-terraform-state-bucket-apucpa4m" \
#          -backend-config="key=${{ matrix.backend_key }}" \
#          -backend-config="region=ap-northeast-2" \
#          -backend-config="dynamodb_table=tf-terraform-lock-table" \
#          -reconfigure
#      working-directory: ${{ github.workspace }}/${{ matrix.folder }}

    # 4. Terraform 초기화 (각 폴더별 backend 설정)
    - name: Terraform Init for VPC
      if: matrix.folder == 'terraform-vpc'
      run: terraform init \
          -backend-config="bucket=tf-terraform-state-bucket-apucpa4m" \
          -backend-config="key=terraform/vpc/terraform.tfstate" \
          -backend-config="region=ap-northeast-2" \
          -backend-config="dynamodb_table=tf-terraform-lock-table" \
          -reconfigure
      working-directory: ${{ github.workspace }}/${{ matrix.folder }}

    - name: Terraform Init for Infra
      if: matrix.folder == 'terraform-infra'
      run: terraform init \
          -backend-config="bucket=tf-terraform-state-bucket-apucpa4m" \
          -backend-config="key=terraform/infra/terraform.tfstate" \
          -backend-config="region=ap-northeast-2" \
          -backend-config="dynamodb_table=tf-terraform-lock-table" \
          -reconfigure
      working-directory: ${{ github.workspace }}/${{ matrix.folder }}

    - name: Terraform Init for Addons
      if: matrix.folder == 'terraform-addons'
      run: terraform init \
          -backend-config="bucket=tf-terraform-state-bucket-apucpa4m" \
          -backend-config="key=terraform/addons/terraform.tfstate" \
          -backend-config="region=ap-northeast-2" \
          -backend-config="dynamodb_table=tf-terraform-lock-table" \
          -reconfigure
      working-directory: ${{ github.workspace }}/${{ matrix.folder }}

    # 5. Terraform Plan (변경사항 미리 확인)
    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ${{ github.workspace }}/${{ matrix.folder }}

    # 6. Terraform Apply (자동 승인)
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ${{ github.workspace }}/${{ matrix.folder }}
      
